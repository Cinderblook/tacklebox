---
- name: Backup home directory data from VMs
  hosts: '*'
  gather_facts: true
  become: false

  vars:
    backup_dir: "/backups"
    source_dir: "/home/austin"
    dest_dir: "{{ backup_dir }}/{{ inventory_hostname }}-{{ ansible_date_time.date }}-backup"
    excluded_dir: "/home/austin/backups"

  tasks:
    - name: Create backup directory
      file:
        path: "{{ dest_dir }}"
        state: directory
      delegate_to: localhost

    - name: Create archive of the source directory
      become: true
      #shell: "tar -czf /tmp/{{ inventory_hostname }}.tar.gz --exclude={{ excluded_dir }} -C {{ source_dir }} ."
      # Using this to push through an error with a live file from a Rancher Container. (Snap file)
      shell: "tar --warning=no-file-changed -czf /tmp/{{ inventory_hostname }}.tar.gz --exclude={{ excluded_dir }} -C {{ source_dir }} ."
      #shell: 
      #  cmd: "tar --warning=no-file-changed -cvzf /tmp/{{ inventory_hostname }}.tar.gz --exclude={{ excluded_dir }} -C {{ source_dir }} ."
      #  executable: /bin/bash    

    - name: Fetch the archive file
      become: false
      fetch:
        src: "/tmp/{{ inventory_hostname }}.tar.gz"
        dest: "{{ dest_dir }}/"
        flat: yes

    - name: Verify backup
      stat:
        path: "{{ dest_dir }}"
      register: backup_stats
      delegate_to: localhost

    - name: Print backup status
      debug:
        msg: "Backup successful: {{ backup_stats.stat.exists }}"
      delegate_to: localhost
