version: '3'

services:
  traefik:
    image: traefik:latest
    container_name: traefik
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    networks:
      - proxy
    ports:
      - "80:80" #HTTP
      - "443:443" #HTTPS
      - "2022:2022/tcp" #SFTP
      - "8080:8080/tcp" #Wings-Service
      - "6443:6443" #K3s
    environment:
      - CF_API_EMAIL=${CF_API_EMAIL}
      # - CF_DNS_API_TOKEN=pC5RuxMK0Vv6-GNLQlbf-JjTLeRtJBlZVezVhb2D
      - CF_API_KEY=${CF_API_KEY}
      # be sure to use the correct one depending on if you are using a token or key
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./logs/traefik-access.log:/var/log/traefik
      - ./data/traefik.yml:/traefik.yml:ro
      - ./data/acme.json:/acme.json
      - ./config.yml:/config.yml:ro
      #- ./.htpasswd:/auth/.htpasswd

    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.traefik.entrypoints=http"
      - "traefik.http.routers.traefik.rule=Host(`traefik-internal.local.cinderblook.com`)"
      - "traefik.http.middlewares.traefik-auth.basicauth.users=${BASICAUTHUSER}"
      # Take note, using a $ in the .env file, will double the amount of '$' signs being pulled over.
      # Double check config variables with 'docker-compose config' to see .env results
      # Generate BASID_AUTH_PASS: echo $(htpasswd -nb "<USER>" "<PASSWORD>") | sed -e s/\\$/\\$\\$/g
      - "traefik.http.middlewares.traefik-https-redirect.redirectscheme.scheme=https"
      - "traefik.http.middlewares.sslheader.headers.customrequestheaders.X-Forwarded-Proto=https"
      - "traefik.http.routers.traefik.middlewares=traefik-https-redirect"
      - "traefik.http.routers.traefik-secure.entrypoints=https"
      - "traefik.http.routers.traefik-secure.rule=Host(`traefik-internal.local.cinderblook.com`)"
      - "traefik.http.routers.traefik-secure.middlewares=traefik-auth"
      - "traefik.http.routers.traefik-secure.tls=true"
      - "traefik.http.routers.traefik-secure.tls.certresolver=cloudflare"
      - "traefik.http.routers.traefik-secure.tls.domains[0].main=local.cinderblook.com"
      - "traefik.http.routers.traefik-secure.tls.domains[0].sans=*.local.cinderblook.com"
      - "traefik.http.routers.traefik-secure.service=api@internal"

networks:
  proxy:
    external: true
#Ensure to setup docker netowkr (docker network create proxy)